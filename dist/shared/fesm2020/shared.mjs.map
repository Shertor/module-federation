{"version":3,"file":"shared.mjs","sources":["../../../projects/shared/src/lib/datetime.service.ts","../../../projects/shared/src/lib/datetime.pipe.ts","../../../projects/shared/src/lib/mfe-shell-example.service.ts","../../../projects/shared/src/public-api.ts","../../../projects/shared/src/shared.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\n\n/**\n * Это пример сервиса, в котором периодически обновляются данные,\n * и на них подписаны сторонние модули.\n * Проектировать часы таким образом некорректно !!!\n */\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DatetimeService {\n  public now: BehaviorSubject<Date> = new BehaviorSubject(new Date());\n\n  constructor() {\n    setInterval(() => {\n      this.now.next(new Date());\n    }, 1);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Пайп для преобразования времени Date в формат hh:mm:ss\n */\n@Pipe({\n  name: 'timePipe',\n  pure: false\n})\nexport class DateTimePipe implements PipeTransform {\n\n  transform(datetime: Date | null): string {\n\n    return datetime ? `${datetime.getHours()}:${datetime.getMinutes()}:${datetime.getSeconds()}` : ''\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MfeShellExampleService {\n  private userName: string = \"\";\n  private value: BehaviorSubject<number> = new BehaviorSubject(0);\n\n  public get user(): string {\n    return this.userName;\n  }\n\n  constructor() {}\n\n  public changeValue(input: number): void {\n    this.value.next(input);\n  }\n\n  public getValue() {\n    return this.value;\n  }\n\n  public login(userName: string, password?: string): void {\n    // Authentication for **honest** users TM. (c) Manfred Steyer\n    this.userName = userName;\n  }\n}\n","/*\n * Public API Surface of shared\n */\n\nexport * from \"./lib/datetime.service\";\nexport * from \"./lib/datetime.pipe\";\nexport * from \"./lib/mfe-shell-example.service\";\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;AAGA;;;;AAIG;MAIU,eAAe,CAAA;AAG1B,IAAA,WAAA,GAAA;QAFO,IAAG,CAAA,GAAA,GAA0B,IAAI,eAAe,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAGlE,WAAW,CAAC,MAAK;YACf,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;SAC3B,EAAE,CAAC,CAAC,CAAC;KACP;;4GAPU,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,cAFd,MAAM,EAAA,CAAA,CAAA;2FAEP,eAAe,EAAA,UAAA,EAAA,CAAA;kBAH3B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACRD;;AAEG;MAKU,YAAY,CAAA;AAEvB,IAAA,SAAS,CAAC,QAAqB,EAAA;QAE7B,OAAO,QAAQ,GAAG,CAAA,EAAG,QAAQ,CAAC,QAAQ,EAAE,CAAA,CAAA,EAAI,QAAQ,CAAC,UAAU,EAAE,CAAA,CAAA,EAAI,QAAQ,CAAC,UAAU,EAAE,EAAE,GAAG,EAAE,CAAA;KAClG;;yGALU,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;uGAAZ,YAAY,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,KAAA,EAAA,CAAA,CAAA;2FAAZ,YAAY,EAAA,UAAA,EAAA,CAAA;kBAJxB,IAAI;AAAC,YAAA,IAAA,EAAA,CAAA;AACJ,oBAAA,IAAI,EAAE,UAAU;AAChB,oBAAA,IAAI,EAAE,KAAK;AACZ,iBAAA,CAAA;;;MCFY,sBAAsB,CAAA;AAQjC,IAAA,WAAA,GAAA;QAPQ,IAAQ,CAAA,QAAA,GAAW,EAAE,CAAC;AACtB,QAAA,IAAA,CAAA,KAAK,GAA4B,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC;KAMhD;AAJhB,IAAA,IAAW,IAAI,GAAA;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;AAIM,IAAA,WAAW,CAAC,KAAa,EAAA;AAC9B,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACxB;IAEM,QAAQ,GAAA;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAEM,KAAK,CAAC,QAAgB,EAAE,QAAiB,EAAA;;AAE9C,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;mHArBU,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,cAFrB,MAAM,EAAA,CAAA,CAAA;2FAEP,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAHlC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACLD;;AAEG;;ACFH;;AAEG;;;;"}